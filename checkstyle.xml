<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
    This configuration file was written by the eclipse-cs plugin configuration editor
-->
<!--
    Checkstyle-Configuration: Black Pepper Checkstyle
    Description: none
-->
<module name="Checker">
  <property name="severity" value="warning"/>
  <module name="TreeWalker">
  	<module name="FileContentsHolder"/>
    <property name="tabWidth" value="4"/>
    <module name="JavadocMethod">
      <metadata name="net.sf.eclipsecs.core.comment" value="Allow methods to not have java doc - simple getters and setters etc shouldn't be forced to have doc. Use common sense."/>
      <property name="severity" value="ignore"/>
      <property name="allowUndeclaredRTE" value="true"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="JavadocType"/>
    <module name="JavadocVariable">
      <metadata name="net.sf.eclipsecs.core.comment" value="Don't force variables to have java doc."/>
      <property name="severity" value="ignore"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="JavadocStyle"/>
    <module name="ConstantName">
      <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$|log"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Allow &quot;log&quot; to be used as a final static member"/>
    </module>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="MethodName"/>
    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>
    <module name="AvoidStarImport"/>
    <module name="IllegalImport"/>
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>
    <module name="LineLength">
      <property name="ignorePattern" value="^\s*\*\s*\{?@"/>
      <property name="max" value="120"/>
    </module>
    <module name="MethodLength"/>
    <module name="ParameterNumber">
      <property name="severity" value="info"/>
      <property name="tokens" value="METHOD_DEF"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Constructors may have many parameters, and make it informational for methods - test or factory methods often need many parameters."/>
    </module>
    <module name="EmptyForIteratorPad"/>
    <module name="MethodParamPad"/>
    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="TYPECAST"/>
    </module>
    <module name="NoWhitespaceBefore"/>
    <module name="OperatorWrap"/>
    <module name="ParenPad"/>
    <module name="TypecastParenPad"/>
    <module name="WhitespaceAfter">
      <property name="tokens" value="COMMA, SEMI, WILDCARD_TYPE"/>
    </module>
    <module name="WhitespaceAround">
      <property name="tokens" value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND"/>
    </module>
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>
    <module name="AvoidNestedBlocks">
      <property name="allowInSwitchCase" value="true"/>
    </module>
    <module name="EmptyBlock">
      <property name="option" value="text"/>
    </module>
    <module name="LeftCurly"/>
    <module name="NeedBraces"/>
    <module name="RightCurly">
      <property name="option" value="alone"/>
    </module>
    <module name="AvoidInlineConditionals">
      <property name="severity" value="ignore"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce this. We want to allow inline conditionals"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="EmptyStatement">
      <property name="severity" value="error"/>
    </module>
    <module name="EqualsHashCode"/>
    <module name="HiddenField">
      <property name="ignoreConstructorParameter" value="true"/>
      <property name="ignoreSetter" value="true"/>
    </module>
    <module name="IllegalInstantiation"/>
    <module name="InnerAssignment"/>
   <module name="MissingSwitchDefault"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="VisibilityModifier"/>
    <module name="ArrayTypeStyle"/>
    <module name="FinalParameters"/>
    <module name="TodoComment">
      <property name="severity" value="info"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="These are informational"/>
    </module>
    <module name="UpperEll"/>
    <module name="EmptyForInitializerPad"/>
    <module name="CovariantEquals"/>
    <module name="ExplicitInitialization"/>
    <module name="FallThrough"/>
    <module name="IllegalCatch">
      <property name="severity" value="info"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="We do not enforce this since we may have to catch these when using third party code or writing framework code"/>
    </module>
    <module name="IllegalThrows"/>
    <module name="IllegalType">
      <property name="tokens" value="METHOD_DEF,PARAMETER_DEF,VARIABLE_DEF"/>
    </module>
    <module name="MissingCtor"/>
    <module name="ModifiedControlVariable"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="PackageDeclaration"/>
    <module name="ReturnCount">
      <property name="severity" value="info"/>
      <property name="max" value="4"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="We do not enforce this since sometimes it is useful to readability. However we mark it for information."/>
    </module>
    <module name="StringLiteralEquality"/>
    <module name="SuperClone"/>
    <module name="SuperFinalize"/>
    <module name="Indentation">
      <property name="severity" value="ignore"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Does not allow different indentation for throws or array initialisation."/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="AbstractClassName">
      <property name="severity" value="info"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce this"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="ImportOrder">
      <property name="severity" value="ignore"/>
      <property name="groups" value="java, javax, junit, org, au, com"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce this - eclipse's rules are slightly different from checkstyle."/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="info"/>
    </module>
    <module name="DefaultComesLast">
      <property name="severity" value="ignore"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce this - allows designing fall through cases"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="DeclarationOrder">
      <property name="severity" value="ignore"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce this"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="FinalLocalVariable">
      <property name="severity" value="info"/>
      <property name="tokens" value="PARAMETER_DEF,VARIABLE_DEF"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Not enforced but highlight for information"/>
    </module>
    <module name="MultipleStringLiterals">
      <metadata name="net.sf.eclipsecs.core.comment" value="Sometimes it's clearer to have a duplicate string and this even at info can pollute the list of messages."/>
      <property name="severity" value="ignore"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="One should not have duplicate string literals. We only mark for information rather than enforce"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="info"/>
    </module>
    <module name="NestedIfDepth">
      <property name="severity" value="info"/>
      <property name="max" value="2"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.customMessage" value="Nested if too deep, consider refactoring"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Should consider refactoring if too deep"/>
    </module>
    <module name="NestedTryDepth">
      <property name="severity" value="info"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.customMessage" value="Nested if too deep, consider refactoring"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Should consider refactoring if too deep"/>
    </module>
    <module name="ParameterAssignment">
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Shouldn't reassign a parameter"/>
    </module>
    <module name="DesignForExtension">
      <property name="severity" value="ignore"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce this. Doesn't work for classes such as Hibernate entities"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="ThrowsCount">
      <property name="severity" value="info"/>
      <property name="max" value="2"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce this but mark for information purposes."/>
    </module>
    <module name="TrailingComment">
      <property name="severity" value="info"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Trailing comments are considered bad practice but we don't enforce"/>
    </module>
    <module name="UncommentedMain">
      <property name="severity" value="info"/>
      <property name="excludedClasses" value="^*Main*$"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce but we highlight for informational purposes"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="format" value="System\.(out|err)\.print"/>
      <property name="message" value="Use the logging framework instead"/>
      <property name="ignoreComments" value="true"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not allow System.out.print"/>
    </module>
    <module name="DescendantToken">
      <property name="tokens" value="LITERAL_ASSERT"/>
      <property name="limitedTokens" value="POST_INC,POST_DEC,METHOD_CALL,ASSIGN,PLUS_ASSIGN,MINUS_ASSIGN,STAR_ASSIGN,DIV_ASSIGN,MOD_ASSIGN,SR_ASSIGN,BSR_ASSIGN,SL_ASSIGN,BAND_ASSIGN,BXOR_ASSIGN,BOR_ASSIGN,INC,DEC"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.customMessage" value="Assertion may have side effect"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Assertion may have side effect"/>
    </module>
    <module name="DescendantToken">
      <property name="severity" value="info"/>
      <property name="tokens" value="FOR_INIT"/>
      <property name="limitedTokens" value="EXPR"/>
      <property name="minimumNumber" value="1"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.customMessage" value="For initializer performs no setup (use while instead?)"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="For initializer performs no setup (use while instead?)"/>
    </module>
    <module name="DescendantToken">
      <property name="severity" value="error"/>
      <property name="tokens" value="FOR_CONDITION"/>
      <property name="limitedTokens" value="EXPR"/>
      <property name="minimumNumber" value="1"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.customMessage" value="For condition performs no check"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="For condition performs no check"/>
    </module>
    <module name="DescendantToken">
      <property name="tokens" value="LITERAL_FINALLY"/>
      <property name="limitedTokens" value="LITERAL_RETURN"/>
      <property name="maximumNumber" value="0"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.customMessage" value="Return from finally block"/>
      <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Return from finally block"/>
    </module>
    <module name="AnnotationUseStyle"/>
    <module name="MissingDeprecated"/>
    <module name="MissingOverride"/>
    <module name="PackageAnnotation"/>
    <module name="ClassTypeParameterName">
      <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
    </module>
    <module name="MethodTypeParameterName">
      <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
    </module>
    <module name="AnonInnerLength">
      <property name="severity" value="info"/>
      <property name="max" value="25"/>
      <message key="maxLen.anonInner" value="Anonymous inner class length is {0,number,integer} lines (max allowed is {1,number,integer}). Consider refactoring"/>
    </module>
    <module name="ExecutableStatementCount">
      <property name="tokens" value="INSTANCE_INIT,STATIC_INIT,CTOR_DEF"/>
      <message key="executableStatementCount" value="Executable statement count is {0,number,integer} (max allowed is {1,number,integer}). Consider refactoring."/>
    </module>
    <module name="OuterTypeNumber"/>
    <module name="GenericWhitespace"/>
    <module name="ExecutableStatementCount">
      <property name="severity" value="info"/>
      <property name="max" value="50"/>
      <property name="tokens" value="METHOD_DEF"/>
      <message key="executableStatementCount" value="Executable statement count is {0,number,integer} (max allowed is {1,number,integer}). Consider Refactoring"/>
    </module>
    <module name="EqualsAvoidNull">
      <property name="severity" value="info"/>
    </module>
    <module name="NoClone"/>
    <module name="NoFinalizer"/>
  </module>
  <module name="FileTabCharacter">
    <property name="severity" value="ignore"/>
    <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce use of tab character since it is too onerous"/>
    <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
  </module>
  <module name="FileTabCharacter">
    <property name="severity" value="ignore"/>
    <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce use of tab character since it is too onerous"/>
    <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
  </module>
  <module name="NewlineAtEndOfFile"/>
  <module name="Translation"/>
  <module name="StrictDuplicateCode">
    <property name="severity" value="ignore"/>
    <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce this, takes too long and comment blocks can cause false duplicates"/>
    <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
  </module>
  <module name="FileLength"/>
  <module name="JavadocPackage">
    <metadata name="net.sf.eclipsecs.core.comment" value="Don't enforce package java doc."/>
    <property name="severity" value="ignore"/>
    <metadata name="com.atlassw.tools.eclipse.checkstyle.comment" value="Do not enforce this but highlight it as an info level message"/>
    <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="info"/>
  </module>
  <module name="SuppressWithNearbyCommentFilter">
    <metadata name="net.sf.eclipsecs.core.comment" value="Suppress warning for utility classes not having a public constructor. Sometimes autowired or self-wiring classes have no public methods."/>
    <property name="commentFormat" value="Suppress Checkstyle \((\w+)\)"/>
    <property name="messageFormat" value=".*"/>
    <property name="influenceFormat" value="1"/>
  </module>
</module>